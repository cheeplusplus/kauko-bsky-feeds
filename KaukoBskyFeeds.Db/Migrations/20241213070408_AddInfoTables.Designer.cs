// <auto-generated />
using System;
using KaukoBskyFeeds.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KaukoBskyFeeds.Db.Migrations
{
    [DbContext(typeof(FeedDbContext))]
    [Migration("20241213070408_AddInfoTables")]
    partial class AddInfoTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("KaukoBskyFeeds.Db.Models.Post", b =>
                {
                    b.Property<string>("Did")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rkey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("EventTimeUs")
                        .HasColumnType("INTEGER");

                    b.PrimitiveCollection<string>("Langs")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReplyParentUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReplyRootUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("TEXT");

                    b.HasKey("Did", "Rkey");

                    b.HasIndex("EventTime");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("KaukoBskyFeeds.Db.Models.PostLike", b =>
                {
                    b.Property<string>("LikeDid")
                        .HasColumnType("TEXT");

                    b.Property<string>("LikeRkey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("EventTimeUs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParentDid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentRkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LikeDid", "LikeRkey");

                    b.HasIndex("EventTime");

                    b.HasIndex("ParentDid", "ParentRkey");

                    b.ToTable("PostLikes");
                });

            modelBuilder.Entity("KaukoBskyFeeds.Db.Models.PostQuotePost", b =>
                {
                    b.Property<string>("QuoteDid")
                        .HasColumnType("TEXT");

                    b.Property<string>("QuoteRkey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("EventTimeUs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParentDid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentRkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("QuoteDid", "QuoteRkey");

                    b.HasIndex("EventTime");

                    b.HasIndex("ParentDid", "ParentRkey");

                    b.ToTable("PostQuotePosts");
                });

            modelBuilder.Entity("KaukoBskyFeeds.Db.Models.PostReply", b =>
                {
                    b.Property<string>("ReplyDid")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReplyRkey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("EventTimeUs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParentDid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentRkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReplyDid", "ReplyRkey");

                    b.HasIndex("EventTime");

                    b.HasIndex("ParentDid", "ParentRkey");

                    b.ToTable("PostReplies");
                });

            modelBuilder.Entity("KaukoBskyFeeds.Db.Models.PostRepost", b =>
                {
                    b.Property<string>("RepostDid")
                        .HasColumnType("TEXT");

                    b.Property<string>("RepostRkey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("EventTimeUs")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParentDid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentRkey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RepostDid", "RepostRkey");

                    b.HasIndex("EventTime");

                    b.HasIndex("ParentDid", "ParentRkey");

                    b.ToTable("PostReposts");
                });

            modelBuilder.Entity("KaukoBskyFeeds.Db.Models.Post", b =>
                {
                    b.OwnsOne("KaukoBskyFeeds.Db.Models.PostEmbeds", "Embeds", b1 =>
                        {
                            b1.Property<string>("PostDid")
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostRkey")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RecordUri")
                                .HasColumnType("TEXT");

                            b1.HasKey("PostDid", "PostRkey");

                            b1.ToTable("Posts");

                            b1.ToJson("Embeds");

                            b1.WithOwner()
                                .HasForeignKey("PostDid", "PostRkey");

                            b1.OwnsMany("KaukoBskyFeeds.Db.Models.PostEmbedImage", "Images", b2 =>
                                {
                                    b2.Property<string>("PostEmbedsPostDid")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("PostEmbedsPostRkey")
                                        .HasColumnType("TEXT");

                                    b2.Property<int>("__synthesizedOrdinal")
                                        .ValueGeneratedOnAddOrUpdate()
                                        .HasColumnType("INTEGER");

                                    b2.Property<string>("MimeType")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("RefLink")
                                        .IsRequired()
                                        .HasColumnType("TEXT");

                                    b2.HasKey("PostEmbedsPostDid", "PostEmbedsPostRkey", "__synthesizedOrdinal");

                                    b2.ToTable("Posts");

                                    b2.WithOwner()
                                        .HasForeignKey("PostEmbedsPostDid", "PostEmbedsPostRkey");
                                });

                            b1.Navigation("Images");
                        });

                    b.Navigation("Embeds");
                });
#pragma warning restore 612, 618
        }
    }
}
